{"version":3,"sources":["store/actions/actionsTypes.js","components/TasksNavigation/NavigationData.js","components/UI/Button.js","components/TasksNavigation/WeekNavigation.js","components/TasksNavigation/TasksNavigation.js","store/actions/dateActions.js","components/TasksList/enums.js","components/TasksList/TaskStatus.js","components/TasksList/WeekTasks.js","components/TasksList/EmptyList.js","components/UI/Spinner.js","store/actions/tasksActions.js","components/TasksList/TasksList.js","components/UI/backdrop.js","components/UI/modal.js","components/AddTask/AddTaskFrom.js","components/AddTask/AddTask.js","components/StatusBar/StatusBar.js","components/Logo/Logo.js","components/Legend/Legend.js","App.js","reportWebVitals.js","store/reductors/date.js","store/reductors/tasks.js","fbConfig.js","store/sagas/selectors.js","store/sagas/tasksSagas.js","store/sagas/index.js","index.js"],"names":["NEXT_WEEK","PREV_WEEK","NEXT_DAY","PREV_DAY","CURRENT_DATE","GET_TASKS_LIST_PROCESS","INIT_GET_TASKS_LIST","GET_TASKS_LIST_SUCCESS","GET_TASKS_LIST_ERROR","INIT_ADD_TASK","ADD_TASK_SUCCESS","ADD_TASK_ERROR","ADD_TASK_PROCESS","CLEAR_ADD_TASK","CHANGE_TASK_STATUS","UPDATE_TASK_PROCESS","MOVE_TASK_TO_NEXT_WEEK","CANCEL_MOVE_TASK_TO_NEXT_WEEK","NavigationData","props","this","weekNumber","dayOfWeek","weekPeriod","className","join","React","Component","Button","btnStyle","disabled","onClick","clicked","id","type","children","description","WeekNavigation","changeView","icon","TasksNavigation","weekDays","bind","e","buttonId","target","changeWeek","date","actionsTypes","changeDay","dayNumber","isoWeekday","weekStart","dayjs","startOf","format","weekEnd","endOf","isoWeek","Fragment","connect","state","dateState","dispatch","payload","currentWeek","prevYear","year","numberOfWeeks","isoWeeksInYear","prevWeek","nextYear","nextWeek","action","currentDay","prevMonth","month","prevMonthLength","daysInMonth","prevDay","nextMonth","nextDay","status","weekday","TaskStatus","statusIcon","value","WeekTasks","currentSortIcon","asc","weekShort","sortBy","setState","tasks","tasksValues","Object","values","sort","a","b","title","toLowerCase","localeCompare","undefined","reverse","sortedTasks","task","taskId","map","day","index","weekTimestamps","setSortingOptions","taskStatus","prevDayStatus","prevDayDate","unix","dayDate","sortedTask","tableSortingBy","keys","tasksControl","tableHeads","tableBody","EmptyList","Spinner","getTasksListSuccess","week","addTaskSuccess","data","TasksList","timer","changeStatus","getTasks","prevProps","i","dayTimestamp","push","parentElement","currentStatus","cancelMoveTaskToNextWeek","changeTaskStatus","statusCheck","clearTimeout","setTimeout","dayId","moveTaskToNextWeek","updateStatus","listLength","length","content","loading","tasksState","newStatus","Backdrop","show","Modal","AddTaskForm","inputChange","htmlFor","onChange","AddTask","addTaskProcess","preventDefault","newTask","trim","addTask","clearData","changeAddFormVisibility","error","message","clearAddTask","taskFrom","StatusBar","currentDate","checkWeekStatus","Logo","Legend","open","legendVisibility","legendData","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","DateReducer","TasksReducer","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getTasksSaga","addTaskSaga","updateTaskStatusSaga","removeTaskFromNextWeek","db","put","collection","where","get","snapshot","empty","forEach","add","select","doc","update","FieldValue","arrayUnion","console","log","filter","weeksToRemove","arrayRemove","tasksWatcher","takeEvery","actionTypes","extend","isLeapYear","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","reductor","combineReducers","firestoreReducer","store","createStore","applyMiddleware","rrfProps","config","createFirestoreInstance","run","library","faAngleDoubleRight","faAngleDoubleLeft","faAngleLeft","faAngleRight","faCircle","faEllipsisH","faStar","faTimes","faAdjust","faCouch","faSortUp","faSortDown","faSort","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00bbf544.chunk.js","sourcesContent":["export const NEXT_WEEK = 'NEXT_WEEK';\r\nexport const PREV_WEEK = 'PREV_WEEK';\r\nexport const NEXT_DAY = 'NEXT_DAY';\r\nexport const PREV_DAY = 'PREV_DAY';\r\nexport const CURRENT_DATE = 'CURRENT_DATE';\r\n\r\n//get tasks list from database\r\nexport const GET_TASKS_LIST_PROCESS = 'GET_TASKS_LIST_PROCESS';\r\nexport const INIT_GET_TASKS_LIST = 'INIT_GET_TASKS_LIST';\r\nexport const GET_TASKS_LIST_SUCCESS = 'GET_TASKS_LIST_SUCCESS';\r\nexport const GET_TASKS_LIST_ERROR = 'GET_TASKS_LIST_ERROR';\r\n\r\n\r\n//add task\r\nexport const INIT_ADD_TASK = 'INIT_ADD_TASK';\r\nexport const ADD_TASK_SUCCESS = 'ADD_TASK_SUCCESS';\r\nexport const ADD_TASK_ERROR = 'ADD_TASK_ERROR';\r\nexport const ADD_TASK_PROCESS = 'ADD_TASK_PROCESS';\r\nexport const CLEAR_ADD_TASK = 'CLEAR_ADD_TASK';\r\n\r\n//change status of task\r\nexport const CHANGE_TASK_STATUS = 'CHANGE_TASK_STATUS';\r\nexport const INIT_UPDATE_TASK_STATUS = 'INIT_UPDATE_TASK_STATUS';\r\nexport const UPDATE_TASK_SUCCESS = 'UPDATE_TASK_SUCCESS';\r\nexport const UPDATE_TASK_FAIL = 'UPDATE_TASK_FAIL';\r\nexport const UPDATE_TASK_PROCESS = 'UPDATE_TASK_PROCESS';\r\n\r\n//move task to next week \r\nexport const MOVE_TASK_TO_NEXT_WEEK = 'MOVE_TASK_TO_NEXT_WEEK';\r\nexport const INIT_MOVE_TASK_TO_NEXT_WEEK = 'INIT_MOVE_TASK_TO_NEXT_WEEK';\r\nexport const MOVE_TASK_TO_NEXT_WEEK_ERROR = 'MOVE_TASK_TO_NEXT_WEEK_ERROR';\r\nexport const MOVE_TASK_TO_NEXT_WEEK_SUCCESS = 'MOVE_TASK_TO_NEXT_WEEK_SUCCESS';\r\n\r\n//delete task from next week after updating status\r\nexport const CANCEL_MOVE_TASK_TO_NEXT_WEEK = 'CANCEL_MOVE_TASK_TO_NEXT_WEEK';\r\nexport const INIT_CANCEL_MOVE_TASK_TO_NEXT_WEEK = 'INIT_CANCEL_MOVE_TASK_TO_NEXT_WEEK';\r\nexport const CANCEL_MOVE_TASK_TO_NEXT_WEEK_ERROR = 'CANCEL_MOVE_TASK_TO_NEXT_WEEK_ERROR';\r\nexport const CANCEL_MOVE_TASK_TO_NEXT_WEEK_SUCCESS = 'CANCEL_MOVE_TASK_TO_NEXT_WEEK_SUCCESS';\r\n","import React from 'react';\r\nimport '../../styles/TasksNavigation/navigationData.scss';\r\n\r\nclass NavigationData extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {weekNumber, dayOfWeek, weekPeriod} = this.props;\r\n\r\n        return (\r\n            <hgroup className='weekInfo'>\r\n                <h2 className='weekInfo__mainTitle'>\r\n                    Week {weekNumber}\r\n                </h2>\r\n                <h3 className={['weekInfo__subtitle', 'weekInfo__subtitle--day'].join(' ')}>\r\n                    {dayOfWeek}\r\n                </h3>\r\n                <h3 className={['weekInfo__subtitle', 'weekInfo__subtitle--week'].join(' ')}>\r\n                    {weekPeriod}\r\n                </h3>\r\n            </hgroup>\r\n        )\r\n    }\r\n};\r\n\r\nexport default NavigationData","import React from 'react';\r\nimport '../../styles/UI/button.scss';\r\n\r\nclass Button extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className={['button',this.props.btnStyle, this.props.disabled ? 'button--disabled' : null].join(' ')} \r\n                    onClick={this.props.clicked} \r\n                    id={this.props.id}\r\n                    type={this.props.type}\r\n                    disabled={this.props.disabled}>\r\n                {this.props.children}\r\n                <span className='button__description'>{this.props.description}</span>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport '../../styles/TasksNavigation/weekNavigation.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NavigationData from './NavigationData';\r\nimport Button from '../UI/Button';\r\n\r\nclass WeekNavigation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {weekNumber, dayOfWeek, weekPeriod} = this.props;\r\n\r\n        return (\r\n            <nav className={'weekNav'}>\r\n                <Button clicked={this.props.changeView} \r\n                        id='prevWeek' \r\n                        btnStyle='button--transparent'\r\n                        description='Previous week'>\r\n                    <FontAwesomeIcon \r\n                        icon='angle-double-left'\r\n                        className='weekNav__arrow' />\r\n                </Button>\r\n                <Button clicked={this.props.changeView} \r\n                        id='prevDay'\r\n                        btnStyle='button--transparent button--invisibleOnDesktop'\r\n                        description='Previous day'>\r\n                    <FontAwesomeIcon \r\n                        icon='angle-left' \r\n                        className='weekNav__arrow' />\r\n                </Button>\r\n                <NavigationData \r\n                    weekNumber = {weekNumber}\r\n                    dayOfWeek = {dayOfWeek}\r\n                    weekPeriod = {weekPeriod}/>\r\n                <Button clicked={this.props.changeView} \r\n                        id='nextDay'\r\n                        btnStyle='button--transparent button--invisibleOnDesktop'\r\n                        description='Next day'>\r\n                    <FontAwesomeIcon \r\n                        icon='angle-right' \r\n                        className='weekNav__arrow' />\r\n                </Button>\r\n                <Button clicked={this.props.changeView} \r\n                        id='nextWeek'\r\n                        btnStyle='button--transparent'\r\n                        description='Next week'>\r\n                    <FontAwesomeIcon \r\n                        icon='angle-double-right' \r\n                        className='weekNav__arrow' />\r\n                </Button>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeekNavigation","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/actions/dateActions';\r\nimport * as actionsTypes from '../../store/actions/actionsTypes';\r\nimport WeekNavigation from './WeekNavigation';\r\n\r\nclass TasksNavigation extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.weekDays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n        this.changeView = this.changeView.bind(this)\r\n    }\r\n\r\n    changeView (e) {\r\n        const buttonId = e.target.id;\r\n        if ( buttonId === 'prevWeek') {\r\n            this.props.changeWeek(this.props.date, actionsTypes.PREV_WEEK)\r\n        } else if (buttonId === 'nextWeek') {\r\n            this.props.changeWeek(this.props.date, actionsTypes.NEXT_WEEK)\r\n        } else if (buttonId === 'prevDay') {\r\n            this.props.changeDay(this.props.date, actionsTypes.PREV_DAY)\r\n        } else {\r\n            this.props.changeDay(this.props.date, actionsTypes.NEXT_DAY)\r\n        }\r\n    }\r\n\r\n    dayOfWeek () {\r\n        const dayNumber = this.props.date.isoWeekday();\r\n        return this.weekDays[dayNumber - 1]\r\n    }\r\n\r\n    weekPeriod () {\r\n        let weekStart = dayjs(this.props.date).startOf('isoWeek').format('DD.MM.YYYY');\r\n        let weekEnd = dayjs(this.props.date).endOf('isoWeek').format('DD.MM.YYYY');\r\n\r\n        return `${weekStart} - ${weekEnd}`\r\n    }\r\n\r\n    weekNumber () {\r\n            return `${dayjs(this.props.date).isoWeek()}`\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <WeekNavigation \r\n                    changeView = {this.changeView}\r\n                    dayOfWeek = {this.dayOfWeek()}\r\n                    weekPeriod = {this.weekPeriod()}\r\n                    weekNumber = {this.weekNumber()}\r\n                />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.dateState.date\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeWeek: (date, type) => dispatch(action.changeWeek(date, type)),\r\n        changeDay: (date, type) => dispatch(action.changeDay(date, type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksNavigation)","import * as actionsTypes from './actionsTypes';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const changeWeek = (date, type) => {\r\n    const currentWeek = date.isoWeek();\r\n\r\n    let payload;\r\n\r\n    if (type === actionsTypes.PREV_WEEK) {\r\n        if (currentWeek === 1) {\r\n            const prevYear = date.year() - 1;\r\n            const numberOfWeeks = dayjs(date).year(prevYear).isoWeeksInYear();\r\n            payload = dayjs(date).year(prevYear).isoWeek(numberOfWeeks);\r\n        } else {\r\n            const prevWeek = currentWeek - 1;\r\n            payload = dayjs(date).isoWeek(prevWeek)\r\n        }\r\n    } else if (type === actionsTypes.NEXT_WEEK) {\r\n        if (currentWeek === dayjs(date).isoWeeksInYear()) {\r\n            const nextYear = date.year() + 1; \r\n            payload = dayjs(date).year(nextYear).isoWeek(1)\r\n        } else {\r\n            const nextWeek = currentWeek + 1\r\n            payload = dayjs(date).isoWeek(nextWeek)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const changeDay = (date, type) => {\r\n    const currentDay = date.date();\r\n\r\n    let payload;\r\n\r\n    if (type === actionsTypes.PREV_DAY) {\r\n        if (currentDay === 1) {\r\n            const prevMonth = date.month() - 1;\r\n            const prevMonthLength = dayjs(date).month(prevMonth).daysInMonth()\r\n            payload = dayjs(date).month(prevMonth).date(prevMonthLength);\r\n        } else {\r\n            const prevDay = currentDay - 1;\r\n            payload = dayjs(date).date(prevDay)\r\n        }\r\n    } else if (type === actionsTypes.NEXT_DAY) {\r\n        const monthLength = date.daysInMonth();\r\n        if (currentDay === monthLength) {\r\n            const nextMonth = date.month() + 1;\r\n            payload = dayjs(date).month(nextMonth).date(1)\r\n        } else {\r\n            const nextDay = currentDay + 1;\r\n            payload = dayjs(date).date(nextDay)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const currentDate = () => {\r\n    return {\r\n        type: actionsTypes.CURRENT_DATE,\r\n        payload: dayjs()\r\n    }\r\n}\r\n\r\n","export const status = {\r\n    NONE: 0,\r\n    PLANNED: 1,\r\n    IN_PROGRESS: 2,\r\n    FINISHED: 3,\r\n    MOVED_TO_NEXT_DAY: 4,\r\n    MOVED_TO_NEXT_WEEK: 5,\r\n    CANCELED: 6\r\n}\r\n\r\nexport const weekday = {\r\n    TUESDAY: 1,\r\n    WEDNESDAY: 2,\r\n    THURSDAY: 3,\r\n    FRIDAY: 4,\r\n    SATURDAY: 5,\r\n    SUNDAY: 6,\r\n    MONDAY: 7\r\n}\r\n\r\n","import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport '../../styles/TaskStatus/taskStatus.scss';\r\nimport {status} from './enums';\r\n\r\nclass TaskStatus extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.statusIcon = this.statusIcon.bind(this)\r\n    }\r\n\r\n    statusIcon (value) {\r\n        switch (value) {\r\n            case status.NONE: \r\n                return <span className='icon'></span>;\r\n            case status.PLANNED:\r\n                return <FontAwesomeIcon icon=\"circle\" className='icon'/>;\r\n            case status.IN_PROGRESS:\r\n                return <FontAwesomeIcon icon=\"ellipsis-h\" className='icon'/>;\r\n            case status.FINISHED:\r\n                return <FontAwesomeIcon icon=\"star\" className='icon'/>;\r\n            case status.MOVED_TO_NEXT_DAY:\r\n                return <FontAwesomeIcon icon=\"angle-right\" className='icon'/>;\r\n            case status.MOVED_TO_NEXT_WEEK:\r\n                return <FontAwesomeIcon icon=\"angle-double-right\" className='icon'/>;\r\n            case status.CANCELED:\r\n                return <FontAwesomeIcon icon=\"times\" className='icon'/>\r\n            default:\r\n                return ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.statusIcon(this.props.status)}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default TaskStatus","import React from 'react';\r\nimport TaskStatus from './TaskStatus';\r\nimport Button from '../UI/Button';\r\nimport '../../styles/TasksList/weekTasks.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport dayjs from 'dayjs';\r\nimport {status, weekday} from './enums';\r\n\r\nclass WeekTasks extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.weekShort = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n        this.state = {\r\n            sortBy: 'tasks',\r\n            asc: false\r\n        };\r\n    }\r\n\r\n    setSortingOptions (id) {\r\n        if (this.state.sortBy === id) {\r\n            this.setState({asc: !this.state.asc})\r\n        } else {\r\n            this.setState({sortBy: id, asc: false})\r\n        }\r\n    }\r\n\r\n    tableSortingBy(tasks, id) {\r\n        const tasksValues = Object.values(tasks);\r\n\r\n        if (id === 'tasks') {\r\n            tasksValues.sort( (a, b) => a.title.toLowerCase().localeCompare(b.title.toLowerCase()))\r\n        } else {\r\n                tasksValues.sort( (a, b) => {\r\n                    if ( a.status[id] === undefined || b.status[id] === undefined) {\r\n                        return -1\r\n                    } else {\r\n                        return a.status[id]-b.status[id]\r\n                    }\r\n                })\r\n        }\r\n\r\n        if (this.state.asc) {\r\n            tasksValues.reverse()\r\n        }\r\n\r\n        let sortedTasks = {};\r\n        for (let task in tasksValues) {\r\n            for (let taskId in this.props.tasks) {\r\n                if (tasksValues[task].title === this.props.tasks[taskId].title) {\r\n                    sortedTasks[taskId] = this.props.tasks[taskId]\r\n                }\r\n            }\r\n        }\r\n\r\n        return sortedTasks\r\n    }\r\n\r\n    currentSortIcon = () => {\r\n        if (this.state.asc) {\r\n            return <FontAwesomeIcon icon='sort-down' className='button__icon--active'/>\r\n        } else {\r\n            return<FontAwesomeIcon icon='sort-up' className='button__icon--active'/> \r\n        }\r\n    }\r\n\r\n    tableHeads(currentDay) {\r\n\r\n        return this.weekShort.map( (day,index) => {\r\n            return <th key={index} id={this.props.weekTimestamps[index]}\r\n                        className={[\"tasksList__title\",\r\n                            index !== currentDay ? \"tasksList__title--invisible\" :null].join(' ')}>\r\n                        <Button btnStyle='button--transparent button__sort' \r\n                            clicked={() => this.setSortingOptions(this.props.weekTimestamps[index])}\r\n                            description= \"sort\">\r\n                            {day} \r\n                            <span>\r\n                                {this.state.sortBy === this.props.weekTimestamps[index] ? this.currentSortIcon() : <FontAwesomeIcon icon='sort' className='button__icon'/>}\r\n                            </span>\r\n                        </Button>\r\n                    </th>\r\n        })\r\n    }\r\n\r\n    tasksControl (weekTimestamps, currentDay, taskStatus) {\r\n\r\n        return weekTimestamps.map( (day, index) => {\r\n            let disabled = false;\r\n            for (let prevDay in taskStatus) {\r\n                const prevDayStatus = taskStatus[prevDay]\r\n                const prevDayDate = dayjs.unix(prevDay);\r\n                const dayDate = dayjs.unix(day);\r\n                if (prevDay < day && (\r\n                    (prevDayStatus === status.FINISHED || prevDayStatus === status.CANCELED) ||\r\n                    (prevDayStatus === status.MOVED_TO_NEXT_WEEK && (\r\n                        (prevDayDate.isoWeek() === dayDate.isoWeek() && dayDate.isoWeekday() !== weekday.MONDAY) || \r\n                        (prevDayDate.isoWeekday() === weekday.MONDAY && dayDate.isoWeek() === prevDayDate.isoWeek() + 1)))\r\n                    )) {\r\n                    disabled = true\r\n                }\r\n            }\r\n\r\n            return <td \r\n                    key={day}\r\n                    className={[\"tasksList__day\",\r\n                                index !== currentDay ? \"tasksList__day--invisible\" :null].join(' ')}>\r\n                        <Button clicked={this.props.clicked} id={day} \r\n                                btnStyle={[\"button--transparent\", \"button__statusIcon\", disabled ? \"button__statusIcon--disabled\" : null].join(' ')} disabled={disabled}\r\n                                description=\"sort\">\r\n                            <TaskStatus status={taskStatus[day] ? taskStatus[day] : 0} />\r\n                        </Button>\r\n                    </td>\r\n        });\r\n    }\r\n\r\n    tableBody(tasks, weekTimestamps, currentDay) {\r\n\r\n        const sortedTask = this.tableSortingBy(tasks, this.state.sortBy)\r\n\r\n        return  Object.keys(sortedTask).map( task => {\r\n            return <tr className=\"tasksList__row\" key={task} id={task}>\r\n                        {this.tasksControl(weekTimestamps,currentDay, tasks[task].status)}\r\n                        <td className = \"tasksList__task\">{tasks[task].title}</td>\r\n                    </tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {tasks, currentDay, weekTimestamps} = this.props;\r\n        return (    \r\n            <table className=\"tasksList\">\r\n                <thead className=\"tasksList__head\">\r\n                    <tr className=\"tasksList__row\">\r\n                        {this.tableHeads(currentDay)}\r\n                        <th className=\"tasksList__title\" \r\n                            id=\"tasks\">\r\n                            <Button btnStyle='button--transparent button__sort' clicked={() => this.setSortingOptions('tasks')}>\r\n                                Tasks \r\n                                <span>\r\n                                    {this.state.sortBy === 'tasks'? this.currentSortIcon() : <FontAwesomeIcon icon='sort' className = 'button__icon'/>}\r\n                                </span>\r\n                            </Button>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\"tasksList__body\">\r\n                    {this.tableBody(tasks, weekTimestamps, currentDay)}\r\n                </tbody>\r\n            </table>\r\n           \r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default WeekTasks","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport '../../styles/TasksList/emptyList.scss';\r\n\r\nclass EmptyList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <article className='emptyList'>\r\n                <h1 className='emptyList__title'>There are no tasks!</h1>\r\n                <p className='emptyList__text'>Let's take a breath and relax</p>\r\n                <FontAwesomeIcon icon='couch' className='emptyList__icon'/>\r\n                <p className='emptyList__text'>or</p>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmptyList","import React from 'react';\r\nimport '../../styles/UI/spinner.scss';\r\n\r\nclass Spinner extends React.Component {\r\n    render() {\r\n        return <div className=\"loader\"></div>\r\n    }\r\n}\r\n\r\nexport default Spinner","import * as actionsTypes from './actionsTypes';\r\n\r\nexport const initGetTasksList = () => {\r\n    return {\r\n        type: actionsTypes.INIT_GET_TASKS_LIST\r\n    }\r\n}\r\n\r\nexport const getTasksListError = (error) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const getTasksListSuccess = (tasks, week) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_SUCCESS,\r\n        tasks: tasks,\r\n        week: week\r\n    }\r\n}\r\n\r\nexport const getTasks = (week) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_PROCESS,\r\n        week: week\r\n    }\r\n}\r\n\r\nexport const initAddTask = () => {\r\n    return {\r\n        type: actionsTypes.INIT_ADD_TASK\r\n    }\r\n}\r\n\r\nexport const addTaskError = (error) => {\r\n    return {\r\n        type: actionsTypes.ADD_TASK_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const addTaskSuccess = (task) => {\r\n    return {\r\n        type: actionsTypes.ADD_TASK_SUCCESS,\r\n        id: task.id,\r\n        data: task.data\r\n    }\r\n}\r\n\r\nexport const addTask = data => {\r\n    return {\r\n        type: actionsTypes.ADD_TASK_PROCESS,\r\n        data: data\r\n    }\r\n} \r\n\r\nexport const clearAddTask= () => {\r\n    return {\r\n        type: actionsTypes.CLEAR_ADD_TASK\r\n    }\r\n}\r\n\r\nexport const changeTaskStatus = (dayId, taskId, currentStatus) => {\r\n\r\n    let newStatus = currentStatus + 1;\r\n    if (currentStatus === 6) {\r\n        newStatus = 0\r\n    } else if (!currentStatus) {\r\n        newStatus = 1\r\n    }\r\n\r\n    return {\r\n        type: actionsTypes.CHANGE_TASK_STATUS,\r\n        task: taskId,\r\n        id: dayId,\r\n        status: newStatus\r\n    }\r\n}\r\n\r\nexport const initTaskStatusUpdate = () => {\r\n    return {\r\n        type:actionsTypes.INIT_UPDATE_TASK_STATUS\r\n    }\r\n};\r\n\r\nexport const updateTaskStatus = () => {\r\n    return {\r\n        type:actionsTypes.UPDATE_TASK_SUCCESS\r\n    }\r\n};\r\n\r\nexport const updateTaskFail = () => {\r\n    return {\r\n        type:actionsTypes.UPDATE_TASK_FAIL\r\n    }\r\n};\r\n\r\nexport const updateStatusProcess = (id) => {\r\n    return {\r\n        type: actionsTypes.UPDATE_TASK_PROCESS,\r\n        id: id,\r\n    }\r\n}\r\n\r\nexport const initMoveTaskToNextWeek = () => {\r\n    return {\r\n        type: actionsTypes.INIT_MOVE_TASK_TO_NEXT_WEEK\r\n    }\r\n}\r\n\r\nexport const moveTaskToNextWeekError = () => {\r\n    return {\r\n        type: actionsTypes.MOVE_TASK_TO_NEXT_WEEK_ERROR\r\n    }\r\n}\r\n\r\nexport const moveTaskToNextWeekSuccess = () => {\r\n    return {\r\n        type: actionsTypes.MOVE_TASK_TO_NEXT_WEEK_SUCCESS\r\n    }\r\n}\r\n\r\nexport const moveTaskToNextWeek = (id) => {\r\n    return {\r\n        type: actionsTypes.MOVE_TASK_TO_NEXT_WEEK,\r\n        id: id\r\n    }\r\n}\r\n\r\nexport const initCancelMoveTaskToNextWeek = () => {\r\n    return {\r\n        type: actionsTypes.INIT_CANCEL_MOVE_TASK_TO_NEXT_WEEK\r\n    }\r\n}\r\n\r\nexport const cancelMoveTaskToNextWeekSuccess = () => {\r\n    return {\r\n        type: actionsTypes.CANCEL_MOVE_TASK_TO_NEXT_WEEK_SUCCESS\r\n    }\r\n}\r\n\r\nexport const cancelMoveTaskToNextWeekError = () => {\r\n    return {\r\n        type: actionsTypes.CANCEL_MOVE_TASK_TO_NEXT_WEEK_ERROR\r\n    }\r\n}\r\n\r\nexport const cancelMoveTaskToNextWeek = (id) => {\r\n    return {\r\n        type: actionsTypes.CANCEL_MOVE_TASK_TO_NEXT_WEEK,\r\n        id: id\r\n    }\r\n}","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport {connect} from 'react-redux';\r\nimport WeekTasks from './WeekTasks';\r\nimport EmptyList from './EmptyList';\r\nimport Spinner from '../UI/Spinner';\r\nimport * as action from '../../store/actions/tasksActions';\r\nimport {status, weekday} from './enums';\r\n\r\nclass TasksList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timer = {};\r\n        this.changeStatus = this.changeStatus.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTasks(this.props.date.isoWeek())\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date.isoWeek() !== prevProps.date.isoWeek()) {\r\n            this.props.getTasks(this.props.date.isoWeek())\r\n        }\r\n    }\r\n\r\n    weekTimestamps () {\r\n        const week = [];\r\n        \r\n        for (let i=0; i<7; i++) {\r\n            const dayTimestamp = dayjs(this.props.date.format('YYYY-MM-DD')).isoWeekday(i).unix();\r\n            week.push(dayTimestamp)\r\n        }\r\n        return week\r\n    }\r\n\r\n    changeStatus (e) {\r\n        const day = e.target.id;\r\n        const task = e.target.parentElement.parentElement.id;\r\n        const currentStatus = this.props.tasks[task].status[day];\r\n        if (currentStatus === status.MOVED_TO_NEXT_WEEK || (day === weekday.SUNDAY && currentStatus === status.MOVED_TO_NEXT_DAY) || (day === weekday.SUNDAY && currentStatus === status.IN_PROGRESS)) {\r\n            this.props.cancelMoveTaskToNextWeek(task)\r\n        }\r\n        this.props.changeTaskStatus(day, task, currentStatus);\r\n        this.statusCheck(task, currentStatus, day);\r\n    }\r\n\r\n    statusCheck (taskId, currentStatus, day) {\r\n        clearTimeout(this.timer[taskId]);\r\n        this.timer[taskId] = setTimeout(() => {\r\n            const dayOfWeek = dayjs.unix(day).isoWeekday();\r\n            if (currentStatus === status.IN_PROGRESS || currentStatus === status.MOVED_TO_NEXT_WEEK || currentStatus === status.MOVED_TO_NEXT_DAY) {\r\n                for (let dayId in this.props.tasks[taskId].status) {\r\n                    if (dayId > day) {\r\n                        this.props.changeTaskStatus(dayId, taskId, status.CANCELED)\r\n                    }\r\n                }\r\n            }\r\n            if (currentStatus === status.MOVED_TO_NEXT_DAY || (dayOfWeek === weekday.SUNDAY && currentStatus === status.FINISHED) || (dayOfWeek === weekday.SUNDAY && currentStatus === status.PLANNED)) {\r\n                this.props.moveTaskToNextWeek(taskId)\r\n            };\r\n            this.props.updateStatus(taskId); \r\n        }, 800)\r\n    }\r\n\r\n    render() {\r\n\r\n        const listLength = Object.keys(this.props.tasks).length;\r\n        let content = <Spinner/>;\r\n\r\n        if (!this.props.loading && listLength>0) {\r\n            content = (<WeekTasks currentDay={this.props.date.isoWeekday() - 1}\r\n                weekTimestamps={this.weekTimestamps()}\r\n                tasks={this.props.tasks}\r\n                clicked={this.changeStatus}/>)\r\n        } else if (!this.props.loading && listLength === 0) {\r\n            content = <EmptyList /> \r\n        }\r\n\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {content}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.dateState.date,\r\n        loading: state.tasksState.loading,\r\n        tasks: state.tasksState.tasks,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTasks: (weekNumber) => dispatch(action.getTasks(weekNumber)),\r\n        changeTaskStatus: (dayId, taskId, currentStatus) => dispatch(action.changeTaskStatus(dayId, taskId, currentStatus)),\r\n        updateStatus: (id) => dispatch(action.updateStatusProcess(id)),\r\n        moveTaskToNextWeek: (id) => dispatch(action.moveTaskToNextWeek(id)),\r\n        cancelMoveTaskToNextWeek: (id) => dispatch(action.cancelMoveTaskToNextWeek(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksList)","import React from 'react';\r\nimport '../../styles/UI/backdrop.scss';\r\n\r\nclass Backdrop extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.show ? (<div className='backdrop' onClick={this.props.clicked}></div>) :null\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backdrop","import React from 'react';\r\nimport Backdrop from './backdrop';\r\nimport '../../styles/UI/modal.scss';\r\n\r\nclass Modal extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Backdrop {...this.props}/>\r\n                <div className={['modal', !this.props.show? 'modal--invisible': null].join(' ')}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Modal","import React from 'react';\r\nimport Button from '../UI/Button';\r\nimport '../../styles/AddTask/addTaskForm.scss';\r\n\r\nclass AddTaskForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const {inputChange, clicked, title, description} = this.props;\r\n        return (\r\n            <form className='addTaskForm'>\r\n                <label htmlFor='title' className='addTaskForm__label'>Task</label>\r\n                <input type='text' id='title' onChange={inputChange} className='addTaskForm__text' value={title}/>\r\n                <label htmlFor='description' className='addTaskForm__label'>Task description</label>\r\n                <textarea id='description' onChange={inputChange} className='addTaskForm__textarea' value={description}/>\r\n                <Button type='submit' clicked={clicked} btnStyle='button--dark' {...this.props}>\r\n                    Add task\r\n                </Button>\r\n            </form>\r\n        )   \r\n    }\r\n};\r\n\r\nexport default AddTaskForm","import React from 'react';\r\nimport Button from '../UI/Button';\r\nimport Modal from '../UI/modal';\r\nimport AddTaskForm from './AddTaskFrom';\r\nimport Spinner from '../UI/Spinner';\r\nimport '../../styles/AddTask/addTask.scss';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/actions/tasksActions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass AddTask extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state= {\r\n            show: false,\r\n            newTask: {\r\n                title: '',\r\n                description: '',\r\n                status: {}\r\n            },\r\n        };\r\n        this.changeAddFormVisibility = this.changeAddFormVisibility.bind(this);\r\n        this.inputChange = this.inputChange.bind(this);\r\n        this.addTaskProcess = this.addTaskProcess.bind(this)\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (!this.props.error && prevProps.message !== this.props.message && prevProps.message === '' ) {\r\n            this.changeAddFormVisibility();\r\n            this.props.clearAddTask();\r\n        }\r\n    }\r\n\r\n    changeAddFormVisibility () {\r\n        this.setState({show: !this.state.show})\r\n\r\n        if(this.state.show) {\r\n            this.clearData()\r\n        }\r\n\r\n        if(this.props.error || this.props.loading) {\r\n            this.props.clearAddTask();\r\n        }\r\n    }\r\n\r\n    inputChange (e) {\r\n        const newTask = this.state.newTask;\r\n        const id = e.target.id;\r\n        const value = e.target.value;\r\n\r\n        newTask[id] = value;\r\n\r\n        this.setState({newTask: newTask})       \r\n    }\r\n\r\n    clearData () {\r\n        const task = {\r\n            title: '',\r\n            description: ''\r\n        }\r\n        this.setState({newTask:task})\r\n    }\r\n\r\n    addTaskProcess = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            week: [this.props.date.isoWeek()],\r\n            title: this.state.newTask.title.trim(),\r\n            description: this.state.newTask.description.trim(),\r\n            status: {...this.state.newTask.status}\r\n        };\r\n        this.props.addTask(data);\r\n        this.clearData()\r\n    }\r\n\r\n    render() {\r\n        let taskFrom = <AddTaskForm title={this.state.newTask.title} \r\n            description={this.state.newTask.description}\r\n            inputChange={this.inputChange}\r\n            clicked={this.addTaskProcess}\r\n            disabled={this.state.newTask.title !== '' ? false : true}/>\r\n        \r\n        if (this.props.loading) {\r\n            taskFrom = <Spinner />\r\n        } else if (this.props.error) {\r\n            taskFrom = <p>{this.props.message}</p>\r\n        }\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Modal show={this.state.show}\r\n                        clicked={this.changeAddFormVisibility}>\r\n                    <Button clicked={this.changeAddFormVisibility} \r\n                    btnStyle='button--transparent addTask__button'\r\n                    description='close'>\r\n                        <FontAwesomeIcon icon=\"times\" className=\"addTask__close\"/>\r\n                    </Button>\r\n                    <div className='addTask'>\r\n                        {taskFrom}\r\n                    </div>\r\n                </Modal>\r\n                <Button clicked={this.changeAddFormVisibility} btnStyle='button--dark addTask__openForm' id=\"fixed\">\r\n                    Add task\r\n                </Button>\r\n            </React.Fragment>\r\n        ) \r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.dateState.date,\r\n        loading: state.tasksState.loading,\r\n        error: state.tasksState.error,\r\n        message: state.tasksState.message\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTask: date => dispatch(action.addTask(date)),\r\n        clearAddTask: () => dispatch(action.clearAddTask())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask)","import React from 'react';\r\nimport Button from '../UI/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../store/actions/dateActions';\r\nimport dayjs from 'dayjs';\r\nimport '../../styles/statusBar.scss';\r\n\r\nclass StatusBar extends React.Component {\r\n\r\n    checkWeekStatus() {\r\n        let statusIcon;\r\n        if (this.props.date.format('YYYY-MM-DD') === dayjs().format('YYYY-MM-DD')) {\r\n            statusIcon = null\r\n        } else if (this.props.date.isoWeek() === dayjs().isoWeek()) {\r\n            statusIcon =  ( <Button btnStyle='button--transparent button--invisibleOnDesktop' \r\n                                clicked={this.props.currentDate.bind(this)}\r\n                                description='Back to current calendar day'>\r\n                                <FontAwesomeIcon icon='adjust' className='status'/>\r\n                            </Button>)\r\n        } else {\r\n            statusIcon = (  <Button btnStyle='button--transparent' \r\n                            clicked={this.props.currentDate.bind(this)}\r\n                            description='Back to current calendar week'>\r\n                                <FontAwesomeIcon icon='circle' className='status'/>\r\n                            </Button>)\r\n        }\r\n\r\n        return statusIcon\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.checkWeekStatus()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.dateState.date\r\n    }\r\n}\r\n\r\nconst mapPropsToDispatch = dispatch => {\r\n    return {\r\n        currentDate:() => dispatch(action.currentDate())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapPropsToDispatch)(StatusBar)","import React from 'react';\r\nimport '../../styles/logo.scss';\r\n\r\nclass Logo extends React.Component {\r\n    render () {\r\n        return (\r\n            <h1 className='logo'>WeeklyToDo</h1>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Logo","import React from 'react';\r\nimport TaskStatus from '../TasksList/TaskStatus';\r\nimport Button from '../UI/Button';\r\nimport '../../styles/legend.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Legend extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n        this.status = ['planned', 'in progress', 'done', 'moved to next day', 'moved to next week', 'canceled']\r\n    }\r\n\r\n    legendData () {\r\n        const statusList = this.status.map( (status, index) => {\r\n            return <tr key={index}>\r\n                <td className='legend__symbol'><TaskStatus status={index + 1} /></td>\r\n                <td className='legend__description'>{status}</td>\r\n            </tr>\r\n        });\r\n\r\n        return statusList\r\n    }\r\n\r\n    legendVisibility () {\r\n        this.setState({open: !this.state.open})\r\n    }\r\n\r\n    render() {\r\n        const legendVisibility = ['legend'];\r\n        if (this.state.open) {\r\n            legendVisibility.push('legend__open')\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {Object.keys(this.props.tasks).length === 0 ? null :\r\n                  (<aside className={legendVisibility.join(' ')}>\r\n                        <Button btnStyle='button--dark'\r\n                            clicked={this.legendVisibility.bind(this)}>\r\n                                Legend\r\n                        </Button>\r\n                        <h2 className='legend__title' >Legend</h2>\r\n                        <table className='legend__table'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className='legend__head'>Symbol</th>\r\n                                    <th className='legend__head'>Description</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody className='legend__data'>\r\n                                {this.legendData()}\r\n                            </tbody>\r\n                        </table>\r\n                    </aside>)\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        tasks: state.tasksState.tasks\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Legend)","import React from 'react';\r\nimport './styles/app.scss';\r\nimport TasksNavigation from './components/TasksNavigation/TasksNavigation';\r\nimport TasksList from './components/TasksList/TasksList';\r\nimport AddTask from './components/AddTask/AddTask';\r\nimport StatusBar from './components/StatusBar/StatusBar';\r\nimport Logo from './components/Logo/Logo';\r\nimport Legend from './components/Legend/Legend';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <header className='header'>\r\n        <Logo />\r\n        <StatusBar />\r\n      </header>\r\n      <main className='main'>\r\n        <TasksNavigation />\r\n        <TasksList />\r\n        <AddTask />\r\n        <Legend />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import dayjs from 'dayjs';\r\nimport * as actionsTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    date: dayjs()\r\n};\r\n\r\nconst DateReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionsTypes.NEXT_WEEK:\r\n        case actionsTypes.PREV_WEEK:\r\n        case actionsTypes.NEXT_DAY:\r\n        case actionsTypes.PREV_DAY: \r\n        case actionsTypes.CURRENT_DATE:\r\n           {\r\n            return {\r\n                ...state,\r\n                date: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default DateReducer","import * as actionsTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    week: 0,\r\n    tasks: {},\r\n    loading: true,\r\n    error: false,\r\n    message: ''\r\n}\r\n\r\nconst TasksReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionsTypes.INIT_GET_TASKS_LIST: \r\n        case actionsTypes.INIT_ADD_TASK:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                message: ''\r\n            };\r\n        case actionsTypes.GET_TASKS_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                tasks: action.tasks,\r\n                loading: false,\r\n                week: action.week\r\n            };\r\n        case actionsTypes.GET_TASKS_LIST_ERROR:\r\n        case actionsTypes.ADD_TASK_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: true,\r\n                message: action.error\r\n            }\r\n        case actionsTypes.ADD_TASK_SUCCESS: \r\n            return {\r\n                ...state,\r\n                tasks: {...state.tasks,\r\n                        [action.id]: action.data},\r\n                loading: false,\r\n                message: 'Task was added to list'\r\n            }\r\n        case actionsTypes.CLEAR_ADD_TASK:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: false,\r\n                message: ''\r\n            }\r\n        case actionsTypes.CHANGE_TASK_STATUS: {\r\n            return {\r\n                ...state,\r\n                tasks: {...state.tasks,\r\n                        [action.task]: {\r\n                            ...state.tasks[action.task],\r\n                            status: {\r\n                                ...state.tasks[action.task].status,\r\n                                [action.id]: action.status\r\n                            }\r\n                        }}\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default TasksReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDKV7jzF3sEfaFSLA99uJrgewhhj-Rk7r4\",\r\n    authDomain: \"weeklytodoapp.firebaseapp.com\",\r\n    projectId: \"weeklytodoapp\",\r\n    storageBucket: \"weeklytodoapp.appspot.com\",\r\n    messagingSenderId: \"153401274191\",\r\n    appId: \"1:153401274191:web:16929c951a558228f55f3a\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase\r\n\r\n","export const getTasks = state => state.tasksState.tasks;\r\nexport const currentWeek = state => state.tasksState.week;\r\nexport const tasksState = state => state.tasksState","import { put, select, delay, call } from 'redux-saga/effects';\r\nimport firebase from '../../fbConfig';\r\nimport * as action from '../actions/tasksActions';\r\nimport { getTasks, currentWeek } from './selectors';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport function* getTasksSaga (data) {\r\n    yield put(action.initGetTasksList())\r\n    try {\r\n        const snapshot = yield db.collection('tasks').where('week', 'array-contains', data.week).get();\r\n        let tasks;\r\n        if (snapshot.empty) {\r\n            tasks = {}\r\n        } else {\r\n            snapshot.forEach(task => {\r\n                tasks = {\r\n                    ...tasks,\r\n                    [task.id]: {\r\n                        title: task.data().title,\r\n                        status: task.data().status,\r\n                        week: task.data().week\r\n                }\r\n            }}); \r\n        }\r\n\r\n        yield put(action.getTasksListSuccess(tasks, data.week))\r\n    } catch (error) {\r\n        yield put(action.getTasksListError('Ups... Something went wrong'))\r\n    }\r\n};\r\n\r\nexport function* addTaskSaga (data) {\r\n    yield put(action.initAddTask());\r\n    try {\r\n        const snapshot = yield db.collection('tasks').add(data.data);\r\n        const task = {\r\n            id: snapshot.id,\r\n            data: data.data\r\n        };\r\n        yield put(action.addTaskSuccess(task))\r\n    } catch (error) {\r\n        yield put(action.addTaskError('Ups... Something went wrong'))\r\n    }\r\n};\r\n\r\nexport function* updateTaskStatusSaga (data) {\r\n    const task = yield select(getTasks);\r\n    yield put(action.initTaskStatusUpdate());\r\n    try {\r\n        yield db.collection('tasks').doc(data.id).update({status:task[data.id].status});\r\n        yield put(action.updateTaskStatus())\r\n    } catch (error) {\r\n        yield put(action.updateTaskFail())\r\n    }\r\n};\r\n\r\nexport function* moveTaskToNextWeek (data) {\r\n    const week = yield select(currentWeek);\r\n    yield put(action.initMoveTaskToNextWeek())\r\n    try {\r\n        yield db.collection('tasks').doc(data.id).update({week: firebase.firestore.FieldValue.arrayUnion(week + 1)});\r\n        yield put(action.moveTaskToNextWeekSuccess())\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put(action.moveTaskToNextWeekError())\r\n    }\r\n};\r\n\r\nexport function* removeTaskFromNextWeek (data) {\r\n    const week = yield select(currentWeek);\r\n    const task = yield select(getTasks);\r\n    const weeksToRemove = yield task[data.id].week.filter(weekNumber => weekNumber > week)\r\n    yield put(action.initCancelMoveTaskToNextWeek())\r\n    try {\r\n        yield db.collection('tasks').doc(data.id).update({week: firebase.firestore.FieldValue.arrayRemove(...weeksToRemove)});\r\n        yield put(action.cancelMoveTaskToNextWeekSuccess())\r\n    } catch (error) {\r\n        yield put(action.cancelMoveTaskToNextWeekError())\r\n    }\r\n};\r\n","import {takeEvery} from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionsTypes';\r\n\r\nimport {getTasksSaga,\r\n        addTaskSaga,\r\n        updateTaskStatusSaga,\r\n        moveTaskToNextWeek,\r\n        removeTaskFromNextWeek,\r\n        checkStatusOptions}\r\nfrom './tasksSagas';\r\n\r\nexport function* tasksWatcher () {\r\n    yield takeEvery(actionTypes.GET_TASKS_LIST_PROCESS, getTasksSaga);\r\n    yield takeEvery(actionTypes.ADD_TASK_PROCESS, addTaskSaga);\r\n    yield takeEvery(actionTypes.UPDATE_TASK_PROCESS, updateTaskStatusSaga);\r\n    yield takeEvery(actionTypes.MOVE_TASK_TO_NEXT_WEEK, moveTaskToNextWeek);\r\n    yield takeEvery(actionTypes.CANCEL_MOVE_TASK_TO_NEXT_WEEK, removeTaskFromNextWeek)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//dayjs\r\nimport dayjs from 'dayjs';\r\nimport isoWeek from 'dayjs/plugin/isoWeek';\r\nimport isoWeeksInYear from 'dayjs/plugin/isoWeeksInYear';\r\nimport isLeapYear from 'dayjs/plugin/isLeapYear';\r\n\r\n//redux\r\nimport {combineReducers, createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport DateReducer from './store/reductors/date';\r\nimport TasksReducer from './store/reductors/tasks';\r\n\r\n//redux-saga\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {tasksWatcher} from './store/sagas/index';\r\n\r\n//firestore\r\nimport firebase from './fbConfig';\r\nimport {ReactReduxFirebaseProvider} from 'react-redux-firebase';\r\nimport {createFirestoreInstance, firestoreReducer } from 'redux-firestore';\r\n\r\n//fontAwesome\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faAngleDoubleRight, \r\n  faAngleDoubleLeft, \r\n  faAngleLeft, \r\n  faAngleRight,\r\n  faCircle,\r\n  faEllipsisH,\r\n  faStar,\r\n  faTimes,\r\n  faAdjust,\r\n  faCouch,\r\n  faSortDown,\r\n  faSortUp,\r\n  faSort} \r\nfrom '@fortawesome/free-solid-svg-icons';\r\n\r\ndayjs.extend(isoWeek);\r\ndayjs.extend(isoWeeksInYear);\r\ndayjs.extend(isLeapYear);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst reductor = combineReducers({\r\n  dateState: DateReducer,\r\n  tasksState: TasksReducer,\r\n  firestore: firestoreReducer\r\n})\r\n\r\nconst store = createStore(reductor, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: {},\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n}\r\nsagaMiddleware.run(tasksWatcher)\r\n\r\nlibrary.add(faAngleDoubleRight, \r\n  faAngleDoubleLeft, \r\n  faAngleLeft, \r\n  faAngleRight, \r\n  faCircle, \r\n  faEllipsisH, \r\n  faStar,\r\n  faTimes,\r\n  faAdjust,\r\n  faCouch,\r\n  faSortUp,\r\n  faSortDown,\r\n  faSort)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <App />\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}