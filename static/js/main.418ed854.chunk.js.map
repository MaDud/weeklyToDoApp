{"version":3,"sources":["store/actions/actionsTypes.js","components/TasksNavigation/navigationData.js","components/TasksNavigation/weekNavigation.js","components/TasksNavigation/TasksNavigation.js","store/actions/dateActions.js","components/TasksList/weekTasks.js","components/UI/spinner.js","store/actions/tasksActions.js","components/TasksList/TasksList.js","App.js","reportWebVitals.js","store/reductors/date.js","store/reductors/tasks.js","fbConfig.js","store/sagas/tasksSagas.js","store/sagas/index.js","index.js"],"names":["NEXT_WEEK","PREV_WEEK","NEXT_DAY","PREV_DAY","ADD_TASK","GET_TASKS_LIST_PROCESS","INIT_GET_TASKS_LIST","GET_TASKS_LIST_SUCCESS","GET_TASKS_LIST_ERROR","navigationData","props","className","weekNumber","join","dayOfWeek","weekPeriod","weekNavigation","icon","onClick","changeView","WEEK_DAYS","connect","state","date","dispatch","changeWeek","type","payload","currentWeek","isoWeek","actionsTypes","prevYear","year","numberOfWeeks","dayjs","isoWeeksInYear","prevWeek","nextYear","nextWeek","action","changeDay","currentDay","prevMonth","month","prevMonthLength","daysInMonth","prevDay","nextMonth","nextDay","Fragment","id","dayNumber","isoWeekday","weekStart","startOf","format","weekEnd","endOf","WEEK_SHORT","weekTasks","tableHeads","map","day","index","tasksControl","weekTimestamps","tableBody","Object","keys","tasks","task","title","spinner","getTasksListSuccess","TasksList","week","i","dayTimestamp","unix","push","this","getTasks","prevProps","loading","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","DateReducer","error","TasksReducer","data","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getTasksSaga","db","put","collection","where","get","snapshot","empty","forEach","console","log","tasksWatcher","takeEvery","actionTypes","extend","isLeapYear","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","reductor","combineReducers","firestoreReducer","store","createStore","applyMiddleware","rrfProps","config","createFirestoreInstance","run","library","add","faAngleDoubleRight","faAngleDoubleLeft","faAngleLeft","faAngleRight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.418ed854.chunk.js","sourcesContent":["export const NEXT_WEEK = 'NEXT_WEEK';\r\nexport const PREV_WEEK = 'PREV_WEEK';\r\nexport const NEXT_DAY = 'NEXT_DAY';\r\nexport const PREV_DAY = 'PREV_DAY';\r\nexport const ADD_TASK = 'ADD_TASK';\r\n\r\n//get tasks list from database\r\nexport const GET_TASKS_LIST_PROCESS = 'GET_TASKS_LIST_PROCESS';\r\nexport const INIT_GET_TASKS_LIST = 'INIT_GET_TASKS_LIST';\r\nexport const GET_TASKS_LIST_SUCCESS = 'GET_TASKS_LIST_SUCCESS';\r\nexport const GET_TASKS_LIST_ERROR = 'GET_TASKS_LIST_ERROR'\r\n\r\n","import React from 'react';\r\nimport '../../styles/TasksNavigation/navigationData.scss';\r\n\r\nconst navigationData = (props) => {\r\n\r\n    return (\r\n        <hgroup className='weekInfo'>\r\n            <h2 className='weekInfo__mainTitle'>\r\n                Week {props.weekNumber}\r\n            </h2>\r\n            <h3 className={['weekInfo__subtitle', 'weekInfo__subtitle--day'].join(' ')}>\r\n                {props.dayOfWeek}\r\n            </h3>\r\n            <h3 className={['weekInfo__subtitle', 'weekInfo__subtitle--week'].join(' ')}>\r\n                {props.weekPeriod}\r\n            </h3>\r\n        </hgroup>\r\n    )\r\n};\r\n\r\nexport default navigationData","import React from 'react';\r\nimport '../../styles/TasksNavigation/weekNavigation.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NavigationData from './navigationData';\r\n\r\nconst weekNavigation = (props) => {\r\n    return (\r\n        <nav className={'weekNav'}>\r\n            <FontAwesomeIcon \r\n                icon='angle-double-left' \r\n                onClick={() => props.changeView('prevWeek')}\r\n                className= 'weekNav__arrow'/>\r\n            <FontAwesomeIcon \r\n                icon='angle-left' \r\n                className={['weekNav__arrow', 'weekNav__arrow--day'].join(' ')} \r\n                onClick={() => props.changeView('prevDay')}/>\r\n            <NavigationData \r\n                weekNumber = {props.weekNumber}\r\n                dayOfWeek = {props.dayOfWeek}\r\n                weekPeriod = {props.weekPeriod}/>\r\n            <FontAwesomeIcon \r\n                icon='angle-right' \r\n                className={['weekNav__arrow', 'weekNav__arrow--day'].join(' ')} \r\n                onClick={() => props.changeView('nextDay')}/>\r\n            <FontAwesomeIcon \r\n                icon='angle-double-right' \r\n                onClick={() => props.changeView('nextWeek')}\r\n                className= 'weekNav__arrow'/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default weekNavigation","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport {connect} from 'react-redux';\r\nimport * as action from '../../store/actions/dateActions';\r\nimport * as actionsTypes from '../../store/actions/actionsTypes';\r\nimport WeekNavigation from './weekNavigation';\r\n\r\nconst WEEK_DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\r\n\r\nconst TasksNavigation = (props) => {\r\n\r\n    const changeView = id => {\r\n\r\n        if ( id === 'prevWeek') {\r\n            props.changeWeek(props.date, actionsTypes.PREV_WEEK)\r\n        } else if (id === 'nextWeek') {\r\n            props.changeWeek(props.date, actionsTypes.NEXT_WEEK)\r\n        } else if (id === 'prevDay') {\r\n            props.changeDay(props.date, actionsTypes.PREV_DAY)\r\n        } else {\r\n            props.changeDay(props.date, actionsTypes.NEXT_DAY)\r\n        }\r\n    }\r\n\r\n    const dayOfWeek = () => {\r\n        const dayNumber = props.date.isoWeekday();\r\n        return WEEK_DAYS[dayNumber - 1]\r\n    }\r\n\r\n    const weekPeriod = () => {\r\n        let weekStart = dayjs(props.date).startOf('isoWeek').format('DD.MM.YYYY');\r\n        let weekEnd = dayjs(props.date).endOf('isoWeek').format('DD.MM.YYYY');\r\n\r\n        return `${weekStart} - ${weekEnd}`\r\n    }\r\n\r\n    const weekNumber = () => {\r\n            return `${dayjs(props.date).isoWeek()}`\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <WeekNavigation \r\n                changeView = {changeView}\r\n                dayOfWeek = {dayOfWeek()}\r\n                weekPeriod = {weekPeriod()}\r\n                weekNumber = {weekNumber()}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.date.date\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeWeek: (date, type) => dispatch(action.changeWeek(date, type)),\r\n        changeDay: (date, type) => dispatch(action.changeDay(date, type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksNavigation)","import * as actionsTypes from './actionsTypes';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const changeWeek = (date, type) => {\r\n    const currentWeek = date.isoWeek();\r\n\r\n    let payload;\r\n\r\n    if (type === actionsTypes.PREV_WEEK) {\r\n        if (currentWeek === 1) {\r\n            const prevYear = date.year() - 1;\r\n            const numberOfWeeks = dayjs(date).year(prevYear).isoWeeksInYear();\r\n            payload = dayjs(date).year(prevYear).isoWeek(numberOfWeeks);\r\n        } else {\r\n            const prevWeek = currentWeek - 1;\r\n            payload = dayjs(date).isoWeek(prevWeek)\r\n        }\r\n    } else if (type === actionsTypes.NEXT_WEEK) {\r\n        if (currentWeek === dayjs(date).isoWeeksInYear()) {\r\n            const nextYear = date.year() + 1; \r\n            payload = dayjs(date).year(nextYear).isoWeek(1)\r\n        } else {\r\n            const nextWeek = currentWeek + 1\r\n            payload = dayjs(date).isoWeek(nextWeek)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const changeDay = (date, type) => {\r\n    const currentDay = date.date();\r\n\r\n    let payload;\r\n\r\n    if (type === actionsTypes.PREV_DAY) {\r\n        if (currentDay === 1) {\r\n            const prevMonth = date.month() - 1;\r\n            const prevMonthLength = dayjs(date).month(prevMonth).daysInMonth()\r\n            payload = dayjs(date).month(prevMonth).date(prevMonthLength);\r\n        } else {\r\n            const prevDay = currentDay - 1;\r\n            payload = dayjs(date).date(prevDay)\r\n        }\r\n    } else if (type === actionsTypes.NEXT_DAY) {\r\n        const monthLength = date.daysInMonth();\r\n        if (currentDay === monthLength) {\r\n            const nextMonth = date.month() + 1;\r\n            payload = dayjs(date).month(nextMonth).date(1)\r\n        } else {\r\n            const nextDay = currentDay + 1;\r\n            payload = dayjs(date).date(nextDay)\r\n        }\r\n    }\r\n\r\n    return {\r\n        type: type,\r\n        payload: payload\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport '../../styles/TasksList/weekTasks.scss';\r\n\r\nconst WEEK_SHORT = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nconst weekTasks = props => {\r\n\r\n    const tableHeads = WEEK_SHORT.map( (day,index) => {\r\n        return <th key={index} \r\n                    className={[\"tasksList__title\",\r\n                        \"tasksList__day\",\r\n                        index !== props.currentDay ? \"tasksList__title--invisible\" :null].join(' ')}>\r\n                    {day}\r\n                </th>\r\n    });\r\n\r\n    const tasksControl = props.weekTimestamps.map( (day, index) => {\r\n        return <td key={index}\r\n                className={[\"tasksList__day\",\r\n                            index !== props.currentDay ? \"tasksList__title--invisible\" :null].join(' ')}>\r\n                    <input type=\"checkbox\" id={day} />\r\n                </td>\r\n    })\r\n\r\n    const tableBody = Object.keys(props.tasks).map( task => {\r\n        return <tr className=\"tasksList__row\" key={task}>\r\n                    {tasksControl}\r\n                    <td className = \"taskList__task\">{props.tasks[task].title}</td>\r\n                </tr>\r\n    })\r\n\r\n    return (    \r\n        <table className=\"tasksList\">\r\n            <thead className=\"tasksList__head\">\r\n                <tr className=\"tasksList__row\">\r\n                    {tableHeads}\r\n                    <th className=\"tasksList__title\">Tasks</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"tasksList__body\">\r\n                {tableBody}\r\n            </tbody>\r\n        </table>\r\n       \r\n    )\r\n\r\n};\r\n\r\nexport default weekTasks","import React from 'react';\r\nimport '../../styles/UI/spinner.scss';\r\n\r\nconst spinner = () => {\r\n    return <div className=\"loader\"></div>\r\n}\r\n\r\nexport default spinner","import * as actionsTypes from './actionsTypes';\r\n\r\nexport const initGetTasksList = () => {\r\n    return {\r\n        type: actionsTypes.INIT_GET_TASKS_LIST\r\n    }\r\n}\r\n\r\nexport const getTasksListError = (error) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const getTasksListSuccess = (tasks) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_SUCCESS,\r\n        tasks: tasks\r\n    }\r\n}\r\n\r\nexport const getTasks = (week) => {\r\n    return {\r\n        type: actionsTypes.GET_TASKS_LIST_PROCESS,\r\n        week: week\r\n    }\r\n}","import React from 'react';\r\nimport dayjs from 'dayjs';\r\nimport {connect} from 'react-redux';\r\nimport WeekTasks from './weekTasks';\r\nimport Spinner from '../UI/spinner';\r\nimport * as action from '../../store/actions/tasksActions';\r\n\r\nclass TasksList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getTasks(this.props.date.isoWeek())\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.date.isoWeek() !== prevProps.date.isoWeek()) {\r\n            this.props.getTasks(this.props.date.isoWeek())\r\n        }\r\n    }\r\n\r\n    weekTimestamps = () => {\r\n        const week = [];\r\n        \r\n        for (let i=0; i<7; i++) {\r\n            const dayTimestamp = dayjs(this.props.date).isoWeekday(i).unix();\r\n            week.push(dayTimestamp)\r\n        }\r\n        return week\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.loading? <Spinner /> :\r\n                <WeekTasks currentDay={this.props.date.isoWeekday() - 1}\r\n                            weekTimestamps={this.weekTimestamps()}\r\n                            tasks={this.props.tasks}/>}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        date: state.date.date,\r\n        loading: state.tasks.loading,\r\n        tasks: state.tasks.tasks,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTasks: (weekNumber) => dispatch(action.getTasks(weekNumber))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TasksList)","import React from 'react';\r\nimport TasksNavigation from './components/TasksNavigation/TasksNavigation';\r\nimport TasksList from './components/TasksList/TasksList';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <header></header>\r\n      <main>\r\n        <TasksNavigation />\r\n        <TasksList />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import dayjs from 'dayjs';\r\nimport * as actionsTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    date: dayjs()\r\n};\r\n\r\nconst DateReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionsTypes.NEXT_WEEK:\r\n        case actionsTypes.PREV_WEEK:\r\n        case actionsTypes.NEXT_DAY:\r\n        case actionsTypes.PREV_DAY:     {\r\n            return {\r\n                ...state,\r\n                date: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default DateReducer","import * as actionsTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    tasks: {},\r\n    loading: true,\r\n    error: null\r\n}\r\n\r\nconst TasksReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionsTypes.INIT_GET_TASKS_LIST: \r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            };\r\n        case actionsTypes.GET_TASKS_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                tasks: action.tasks,\r\n                loading: false\r\n            };\r\n        case actionsTypes.GET_TASKS_LIST_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionsTypes.ADD_TASK: \r\n            return {\r\n                ...state,\r\n                tasks: {...state.tasks,\r\n                        [action.id]: action.data}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default TasksReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDKV7jzF3sEfaFSLA99uJrgewhhj-Rk7r4\",\r\n    authDomain: \"weeklytodoapp.firebaseapp.com\",\r\n    projectId: \"weeklytodoapp\",\r\n    storageBucket: \"weeklytodoapp.appspot.com\",\r\n    messagingSenderId: \"153401274191\",\r\n    appId: \"1:153401274191:web:16929c951a558228f55f3a\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase\r\n\r\n","import { put, call } from 'redux-saga/effects';\r\nimport firebase from '../../fbConfig';\r\nimport * as action from '../actions/tasksActions';\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport function* getTasksSaga (data) {\r\n    yield put(action.initGetTasksList())\r\n    try {\r\n        const snapshot = yield db.collection('tasks').where('week', '==', data.week).get();\r\n        let tasks;\r\n        if (snapshot.empty) {\r\n            tasks = {}\r\n        } else {\r\n            snapshot.forEach(task => {\r\n                tasks = {\r\n                    ...tasks,\r\n                    [task.id]: task.data()\r\n                }\r\n            }); \r\n        }\r\n        console.log(tasks)\r\n\r\n        yield put(action.getTasksListSuccess(tasks))\r\n    } catch (error) {\r\n        yield put(action.getTasksListError('Ups... Something went wrong'))\r\n    }\r\n}","import {takeEvery} from 'redux-saga/effects';\r\nimport * as actionTypes from '../actions/actionsTypes';\r\n\r\nimport {getTasksSaga} from './tasksSagas';\r\n\r\nexport function* tasksWatcher () {\r\n    yield takeEvery(actionTypes.GET_TASKS_LIST_PROCESS, getTasksSaga)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n//dayjs\r\nimport dayjs from 'dayjs';\r\nimport isoWeek from 'dayjs/plugin/isoWeek';\r\nimport isoWeeksInYear from 'dayjs/plugin/isoWeeksInYear';\r\nimport isLeapYear from 'dayjs/plugin/isLeapYear';\r\n\r\n//redux\r\nimport {combineReducers, createStore, applyMiddleware, compose} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport DateReducer from './store/reductors/date';\r\nimport TasksReducer from './store/reductors/tasks';\r\n\r\n//redux-saga\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {tasksWatcher} from './store/sagas/index';\r\n\r\n//firestore\r\nimport firebase from './fbConfig';\r\nimport {ReactReduxFirebaseProvider} from 'react-redux-firebase';\r\nimport {createFirestoreInstance, firestoreReducer } from 'redux-firestore';\r\n\r\n//fontAwesome\r\nimport {library} from '@fortawesome/fontawesome-svg-core';\r\nimport {faAngleDoubleRight, faAngleDoubleLeft, faAngleLeft, faAngleRight} from '@fortawesome/free-solid-svg-icons';\r\n\r\ndayjs.extend(isoWeek);\r\ndayjs.extend(isoWeeksInYear);\r\ndayjs.extend(isLeapYear);\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst reductor = combineReducers({\r\n  date: DateReducer,\r\n  tasks: TasksReducer,\r\n  firestore: firestoreReducer\r\n})\r\n\r\nconst store = createStore(reductor, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: {},\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n}\r\nsagaMiddleware.run(tasksWatcher)\r\n\r\nlibrary.add(faAngleDoubleRight, faAngleDoubleLeft, faAngleLeft, faAngleRight)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ReactReduxFirebaseProvider {...rrfProps}>\r\n        <App />\r\n      </ReactReduxFirebaseProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}